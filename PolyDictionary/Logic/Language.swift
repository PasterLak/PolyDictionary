import Foundation

public struct Language: Identifiable, Equatable {
    public var id = UUID()
    var name: String
    var flag: String
    var code: String // "EN", "RU"
    
    // Lazy static property for thread-safe initialization
    public static let allLanguages: [Language] = {
        return [
            Language(name: "Arabic", flag: "ðŸ‡¸ðŸ‡¦", code: "AR"),
            Language(name: "Chinese", flag: "ðŸ‡¨ðŸ‡³", code: "ZH"),
            Language(name: "English", flag: "ðŸ‡¬ðŸ‡§", code: "EN"),
            Language(name: "French", flag: "ðŸ‡«ðŸ‡·", code: "FR"),
            Language(name: "German", flag: "ðŸ‡©ðŸ‡ª", code: "DE"),
            Language(name: "Hindi", flag: "ðŸ‡®ðŸ‡³", code: "HI"),
            Language(name: "Japanese", flag: "ðŸ‡¯ðŸ‡µ", code: "JA"),
            Language(name: "Portuguese", flag: "ðŸ‡µðŸ‡¹", code: "PT"),
            Language(name: "Russian", flag: "ðŸ‡·ðŸ‡º", code: "RU"),
            Language(name: "Spanish", flag: "ðŸ‡ªðŸ‡¸", code: "ES"),
            Language(name: "Ukrainian", flag: "ðŸ‡ºðŸ‡¦", code: "UK")
        ]
    }()
    
    public static func defaultLanguage() -> Language {
        return Language(name: "English", flag: "ðŸ‡¬ðŸ‡§", code: "EN")
    }
    
    public static func getLanguageByCode(code: String) -> Language {
        return allLanguages.first { $0.code == code } ?? defaultLanguage()
    }
    
    public static func getLanguageByName(name: String) -> Language {
        return allLanguages.first { $0.name == name } ?? defaultLanguage()
    }
}

